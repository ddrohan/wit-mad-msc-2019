


  {
  
  
    "properties" : {},
  
  "type" : "lab",
  "title" : "Lab-02",
  "img" : "img/main.png",
  "videoid" : "none",
  "objectives" : "<p>In this Lab, <b>CoffeeMate.2.0</b> we will build on the previous lab and add in some new features and UI Design. On completion of this lab you&#39;ll be able to use Bundles, Custom Layouts, Custom Adapters and Fragments.</p>",
  "folder" : "book-coffeemate-lab-02",
  "link" : "index.html",
  "los": [
   ]
,
  "chapters" : [
  
    {
    "title": "# Objectives",
    "shortTitle": "Lab-02",
    "contentMd" : "# Objectives\n\nIn this Lab, <b>CoffeeMate.2.0</b> we will build on the previous lab and add in some new features and UI Design. On completion of this lab you'll be able to use Bundles, Custom Layouts, Custom Adapters and Fragments.\n"
    },
  
    {
    "title": "# Setup - Starter Code",
    "shortTitle": "01",
    "contentMd" : "# Setup - Starter Code\n\nTo complete this lab you can either continue on with your solution from Lab 01 (CoffeeMate.1.0) or download the previous solution here [CoffeeMate.2.0.Starter](archives/CoffeeMate.2.0.Starter.zip)\n\nTo open this in Android Studio, first extract the archive somewhere on your hard drive and select 'File->Open' etc.\n\nOnce you open/import the <b>CoffeeMate.2.0</b> Project you'll probably need to 'Clean & Build' the project to fix any residual errors.\n\nNext, go ahead and create a new 'Edit' Activity, with the following settings\n\n![](img/newedit.png)\n\nThen, replace the default layout with this\n\n~~~xml\n<TextView\n        android:id=\"@+id/editBarTV\"\n        android:layout_width=\"384dp\"\n        android:layout_height=\"25dp\"\n        android:layout_marginTop=\"104dp\"\n        android:background=\"@color/colorPrimary\"\n        android:paddingBottom=\"2dp\"\n        android:text=\"@string/coffeeDetailsLbl\"\n        android:textAlignment=\"center\"\n        android:textColor=\"@color/colorFontWhite\"\n        android:textSize=\"18sp\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.0\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <TextView\n        android:id=\"@+id/editfooter\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"36dp\"\n        android:background=\"@color/colorPrimary\"\n        android:paddingTop=\"5dp\"\n        android:text=\"@string/appWebsite\"\n        android:textAlignment=\"center\"\n        android:textColor=\"@color/colorFontWhite\"\n        android:textSize=\"16sp\"\n        android:textStyle=\"bold\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.523\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"1.0\" />\n\n    <TextView\n        android:id=\"@+id/editPriceTV\"\n        android:layout_width=\"99dp\"\n        android:layout_height=\"43dp\"\n        android:paddingTop=\"10dp\"\n        android:text=\"@string/coffeePriceLbl\"\n        android:textAlignment=\"textEnd\"\n        android:textColor=\"@color/colorFontBlack\"\n        android:textSize=\"18sp\"\n        app:layout_constraintBottom_toTopOf=\"@+id/editfooter\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.056\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.613\" />\n\n    <TextView\n        android:id=\"@+id/editShopTV\"\n        android:layout_width=\"99dp\"\n        android:layout_height=\"43dp\"\n        android:paddingTop=\"10dp\"\n        android:text=\"@string/coffeeShopLbl\"\n        android:textAlignment=\"textEnd\"\n        android:textColor=\"@color/colorFontBlack\"\n        android:textSize=\"18sp\"\n        app:layout_constraintBottom_toTopOf=\"@+id/editfooter\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.056\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.472\" />\n\n    <TextView\n        android:id=\"@+id/editNameTV\"\n        android:layout_width=\"99dp\"\n        android:layout_height=\"43dp\"\n        android:paddingTop=\"10dp\"\n        android:text=\"@string/coffeeNameLbl\"\n        android:textAlignment=\"textEnd\"\n        android:textColor=\"@color/colorFontBlack\"\n        android:textSize=\"18sp\"\n        app:layout_constraintBottom_toTopOf=\"@+id/editfooter\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.056\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.344\" />\n\n    <EditText\n        android:id=\"@+id/editNameET\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:ems=\"10\"\n        android:hint=\"Coffee Name\"\n        android:inputType=\"textPersonName\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.447\"\n        app:layout_constraintStart_toEndOf=\"@+id/editNameTV\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.307\" />\n\n    <EditText\n        android:id=\"@+id/editPriceET\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:ems=\"10\"\n        android:hint=\"Price\"\n        android:inputType=\"numberDecimal\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.447\"\n        app:layout_constraintStart_toEndOf=\"@+id/editPriceTV\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.572\" />\n\n    <EditText\n        android:id=\"@+id/editShopET\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"8dp\"\n        android:ems=\"10\"\n        android:hint=\"Shop\"\n        android:inputType=\"textPersonName\"\n        app:layout_constraintBottom_toTopOf=\"@+id/addPriceET\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.369\"\n        app:layout_constraintStart_toEndOf=\"@+id/editShopTV\"\n        app:layout_constraintTop_toBottomOf=\"@+id/editNameET\"\n        app:layout_constraintVertical_bias=\"0.444\" />\n\n    <RatingBar\n        android:id=\"@+id/editRatingBar\"\n        android:layout_width=\"242dp\"\n        android:layout_height=\"52dp\"\n        android:rating=\"1\"\n        android:stepSize=\"0.5\"\n        app:layout_constraintBottom_toTopOf=\"@+id/editfooter\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/addPriceET\"\n        app:layout_constraintVertical_bias=\"0.116\" />\n\n    <Button\n        android:id=\"@+id/editCoffeeBtn\"\n        android:layout_width=\"79dp\"\n        android:layout_height=\"84dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:background=\"@color/colorFontOffWhite\"\n        android:drawableTop=\"@drawable/blue_add_48\"\n        android:onClick=\"saveCoffee\"\n        android:text=\"@string/saveCoffeeBtn\"\n        app:layout_constraintBottom_toTopOf=\"@+id/editfooter\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.501\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/addRatingBar\"\n        app:layout_constraintVertical_bias=\"0.466\" />\n\n    <TextView\n        android:id=\"@+id/editTitleTV\"\n        android:layout_width=\"199dp\"\n        android:layout_height=\"45dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"28dp\"\n        android:text=\"Title\"\n        android:textSize=\"30sp\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.109\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <ImageView\n        android:id=\"@+id/editFavourite\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"16dp\"\n        android:onClick=\"toggle\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.929\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:srcCompat=\"@drawable/favourites_72\" />\n~~~\n\nand the default Activity with this\n\n~~~java\npublic class Edit extends Base {\n    public Context context;\n    public boolean isFavourite;\n    public Coffee aCoffee;\n    public ImageView editFavourite;\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.edit);\n        context = this;\n    }\n\n    public void saveCoffee(View v) {\n\n        String coffeeName = ((EditText) findViewById(R.id.editNameET)).getText().toString();\n        String coffeeShop = ((EditText) findViewById(R.id.editShopET)).getText().toString();\n        String coffeePriceStr = ((EditText) findViewById(R.id.editPriceET)).getText().toString();\n        double ratingValue =((RatingBar) findViewById(R.id.editRatingBar)).getRating();\n        double coffeePrice;\n\n        try {\n            coffeePrice = Double.parseDouble(coffeePriceStr);\n        } catch (NumberFormatException e) {\n            coffeePrice = 0.0;\n        }\n\n        if ((coffeeName.length() > 0) && (coffeeShop.length() > 0) && (coffeePriceStr.length() > 0)) {\n            aCoffee.coffeeName = coffeeName;\n            aCoffee.shop = coffeeShop;\n            aCoffee.price = coffeePrice;\n            aCoffee.rating = ratingValue;\n\n            // Update coffee & return home\n\n        } else\n            Toast.makeText(this, \"You must Enter Something for Name and Shop\",Toast.LENGTH_SHORT).show();\n    }\n}\n~~~\n\nWe also need a custom row layout, so create a new 'coffeerow' layout in the 'layout' folder like so\n\n![](img/coffeerow.png)\n\nand replace the default with this\n\n~~~xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n  \n    <ImageView\n        android:id=\"@+id/rowFavouriteImg\"\n        android:layout_width=\"39dp\"\n        android:layout_height=\"39dp\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:contentDescription=\"fav\"\n        android:gravity=\"center_vertical\"\n        android:src=\"@drawable/favourites_72\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.024\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <ImageView\n        android:id=\"@+id/rowDeleteImg\"\n        android:layout_width=\"45dp\"\n        android:layout_height=\"45dp\"\n        android:layout_alignParentEnd=\"true\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:contentDescription=\"fav\"\n        android:src=\"@android:drawable/ic_delete\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"1.0\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <TextView\n        android:id=\"@+id/rowCoffeeName\"\n        android:layout_width=\"130dp\"\n        android:layout_height=\"20dp\"\n        android:layout_alignTop=\"@+id/rowFavouriteImg\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:layout_toEndOf=\"@+id/rowFavouriteImg\"\n        android:gravity=\"center_vertical\"\n        android:text=\"Coffee Name\"\n        android:textAlignment=\"viewStart\"\n        android:textColor=\"@color/colorPrimary\"\n        android:textSize=\"14sp\"\n        android:textStyle=\"bold\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.277\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <TextView\n        android:id=\"@+id/rowCoffeeShop\"\n        android:layout_width=\"130dp\"\n        android:layout_height=\"16dp\"\n        android:layout_alignBottom=\"@+id/rowFavouriteImg\"\n        android:layout_alignStart=\"@+id/rowCoffeeName\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"32dp\"\n        android:gravity=\"center_vertical\"\n        android:text=\"Coffee Shop\"\n        android:textAlignment=\"viewStart\"\n        android:textColor=\"@color/colorFontBlack\"\n        android:textSize=\"12sp\"\n        android:textStyle=\"bold\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.277\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <TextView\n        android:id=\"@+id/rowRating\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignBottom=\"@+id/rowDeleteImg\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"32dp\"\n        android:layout_toStartOf=\"@+id/rowDeleteImg\"\n        android:gravity=\"center_vertical\"\n        android:text=\"5.0 *\"\n        android:textAlignment=\"viewStart\"\n        android:textColor=\"@color/colorFontBlack\"\n        android:textSize=\"12sp\"\n        android:textStyle=\"bold\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.79\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <TextView\n        android:id=\"@+id/rowPrice\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignStart=\"@+id/rowRating\"\n        android:layout_alignTop=\"@+id/rowDeleteImg\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        android:gravity=\"center_vertical\"\n        android:text=\"€3.99\"\n        android:textAlignment=\"viewStart\"\n        android:textColor=\"@color/colorPrimary\"\n        android:textSize=\"14sp\"\n        android:textStyle=\"bold\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.819\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n</android.support.constraint.ConstraintLayout>\n~~~\n\nand we need 'adapter' code and 'fragment' code to enhance our UI so go ahead and create 2 new packages\n\n~~~java\nie.cm.adapters\nie.cm.fragments\n~~~\n\nand create the respective <b>JAVA</b> classes within them as shown in the screenshot below\n\n![](img/starter.png)\n\nReplace 'CoffeeItem' with\n\n~~~java\npublic class CoffeeItem {\n    View view;\n\n    public CoffeeItem(Context context, ViewGroup parent,\n                      View.OnClickListener deleteListener, Coffee coffee)\n    {\n        LayoutInflater inflater = (LayoutInflater) context\n                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        view = inflater.inflate(R.layout.coffeerow, parent, false);\n        view.setTag(coffee.coffeeId);\n\n        updateControls(coffee);\n\n        ImageView imgDelete = (ImageView) view.findViewById(R.id.rowDeleteImg);\n        imgDelete.setTag(coffee);\n        imgDelete.setOnClickListener(deleteListener);\n    }\n\n    private void updateControls(Coffee coffee) {\n        ((TextView) view.findViewById(R.id.rowCoffeeName)).setText(coffee.coffeeName);\n\n        // Do the same for shop, rating, price & the favourite image here\n        // and set the favourite on/off depending on the coffees favourite value\n\n    }\n}\n~~~\n\nreplace 'CoffeeListAdapter' with\n\n~~~java\npublic class CoffeeListAdapter extends ArrayAdapter<Coffee>\n{\n  private Context context;\n  private OnClickListener deleteListener;\n  public List<Coffee> coffeeList;\n\n  public CoffeeListAdapter(Context context, OnClickListener deleteListener, List<Coffee> coffeeList)\n  {\n    super(context, R.layout.coffeerow, coffeeList);\n\n    this.context = context;\n    this.deleteListener = deleteListener;\n    this.coffeeList = coffeeList;\n  }\n\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent)\n  {\n    return null;\n  }\n\n  @Override\n  public int getCount()\n  {\n    return 0;\n  }\n}\n~~~\n\nand replace 'CoffeeFragment' with\n\n~~~java\npublic class CoffeeFragment  extends ListFragment implements  OnClickListener\n{\n  public         Base                activity;\n  public static  CoffeeListAdapter \tlistAdapter;\n  public         ListView \t\t\tlistView;\n\n  public CoffeeFragment() {\n    // Required empty public constructor\n  }\n\n  public static CoffeeFragment newInstance() {\n    CoffeeFragment fragment = new CoffeeFragment();\n    return fragment;\n  }\n\n@Override\n  public void onAttach(Context context)\n  {\n    super.onAttach(context);\n    this.activity = (Base) context;\n  }\n\n  @Override\n  public void onCreate(Bundle savedInstanceState)\n  {\n    super.onCreate(savedInstanceState);\n\n  }\n\n  @Override\n  public void onStart()\n  {\n    super.onStart();\n  }\n\n  @Override\n  public void onClick(View view)\n  {\n  }\n}\n~~~\n\nand replace your 'Coffee' class with\n\n~~~java\npublic class Coffee implements Serializable\n{\n\tpublic String coffeeId;\n\tpublic String coffeeName;\n\tpublic String shop;\n\tpublic double rating;\n\tpublic double price;\n\tpublic boolean favourite;\n\n\tpublic Coffee() {}\n\n\tpublic Coffee(String name, String shop, double rating, double price, boolean fav)\n\t{\n\t\tthis.coffeeId = UUID.randomUUID().toString();\n\t\tthis.coffeeName = name;\n\t\tthis.shop = shop;\n\t\tthis.rating = rating;\n\t\tthis.price = price;\n\t\tthis.favourite = fav;\n\t}\n\n\t@Override\n\tpublic String toString() {\n\t\treturn coffeeId + \" \" + coffeeName + \", \" + shop + \", \" + rating\n\t\t\t\t+ \", \" + price + \", fav =\" + favourite;\n\t}\n}\n~~~\n\nThe last thing to do is refactor our app to use fragments so\n\nfirst, replace your current 'content_home' with the following\n\n~~~xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.constraint.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:layout_behavior=\"@string/appbar_scrolling_view_behavior\"\n    tools:context=\".activities.Home\"\n    tools:showIn=\"@layout/home\">\n\n    <Button\n        android:id=\"@+id/searchBtn\"\n        android:layout_width=\"93dp\"\n        android:layout_height=\"119dp\"\n        android:background=\"@color/colorFontOffWhite\"\n        android:drawableTop=\"@drawable/search_72\"\n        android:text=\"@string/searchCoffeesLbl\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.033\" />\n\n    <Button\n        android:id=\"@+id/addBtn\"\n        android:layout_width=\"93dp\"\n        android:layout_height=\"119dp\"\n        android:background=\"@color/colorFontOffWhite\"\n        android:drawableTop=\"@drawable/add_72\"\n        android:onClick=\"add\"\n        android:text=\"@string/addACoffeeLbl\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.094\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.033\" />\n\n    <Button\n        android:id=\"@+id/favouritesBtn\"\n        android:layout_width=\"93dp\"\n        android:layout_height=\"119dp\"\n        android:background=\"@color/colorFontOffWhite\"\n        android:drawableTop=\"@drawable/favourites_72\"\n        android:text=\"@string/favouritesCoffeeLbl\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.915\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.033\" />\n\n    <TextView\n        android:id=\"@+id/addBarTV\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"21dp\"\n        android:background=\"@color/colorPrimary\"\n        android:text=\"@string/recentlyViewedLbl\"\n        android:textAlignment=\"center\"\n        android:textColor=\"@color/colorFontWhite\"\n        android:textSize=\"16dp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.0\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/addBtn\"\n        app:layout_constraintVertical_bias=\"0.027\" />\n\n    <TextView\n        android:id=\"@+id/footer\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"36dp\"\n        android:background=\"@color/colorPrimary\"\n        android:paddingTop=\"5dp\"\n        android:text=\"@string/appWebsite\"\n        android:textAlignment=\"center\"\n        android:textColor=\"@color/colorFontWhite\"\n        android:textSize=\"16sp\"\n        android:textStyle=\"bold\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.0\"\n        app:layout_constraintStart_toStartOf=\"parent\" />\n\n    <TextView\n        android:id=\"@+id/emptyList\"\n        android:layout_width=\"266dp\"\n        android:layout_height=\"31dp\"\n        android:layout_gravity=\"center\"\n        android:text=\"@string/emptyMessageLbl\"\n        android:textSize=\"12sp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.584\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.662\" />\n\n    <FrameLayout\n        android:id=\"@+id/fragment_container\"\n        android:layout_width=\"378dp\"\n        android:layout_height=\"310dp\"\n        android:layout_marginBottom=\"8dp\"\n        android:layout_marginTop=\"8dp\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/footer\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"@+id/searchBtn\"\n        app:layout_constraintVertical_bias=\"0.84\">\n\n    </FrameLayout>\n\n</android.support.constraint.ConstraintLayout>\n~~~\n\nadd the following variables to your 'Base' classes\n\n~~~java\npublic Bundle            activityInfo; // Used for persistence (of sorts)\npublic CoffeeFragment    coffeeFragment; // How we'll 'share' our List of Coffees between Activities\n~~~\n\nand replace your 'Home.java' with\n\n~~~java\npublic class Home extends Base {\n\n    TextView emptyList;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.home);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        emptyList = findViewById(R.id.emptyList);\n\n        FloatingActionButton fab = findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Snackbar.make(view, \"Information\", Snackbar.LENGTH_LONG)\n                        .setAction(\"More Info...\", new View.OnClickListener() {\n                            @Override\n                            public void onClick(View view) {\n\n                            }\n                        }).show();\n            }\n        });\n        this.setupCoffees();\n    }\n\n    public void add(View v) {\n        startActivity(new Intent(this, Add.class));\n    }\n\n    @Override\n    protected void onResume() {\n        super.onResume();\n\n        if(coffeeList.isEmpty())\n            emptyList.setText(getString(R.string.emptyMessageLbl));\n        else\n            emptyList.setText(\"\");\n\n    }\n\n    public void setupCoffees(){\n        coffeeList.add(new Coffee(\"Standard Black\", \"Some Shop\",2.5,1.99,false));\n        coffeeList.add(new Coffee(\"Regular Joe\", \"Joe's Place\",3.5,2.99,true));\n        coffeeList.add(new Coffee(\"Espresso\", \"Ardkeen Stores\",4.5,1.49,true));\n    }\n}\n\n~~~\n\nFix any import errors (as you will get them :) ) and take some time to familiarise yourself with the <b>new (highlighted)</b> classes in your project and explore the resources that you will be referring to throughout the lab, especially the layouts in both 'Graphical Layout' view and 'XML' view. It's also probably a good idea to run the App at this stage too, so you can set up your AVD (if you haven't done so already) and confirm that the starter app is configured properly and running (so basically it's Version 1 with a few changes).\n\nIn this lab, you are required to do the following:\n\n- Display the list of Coffees in a visually appealing list.\n\n- Allow Coffees in the list to be updated (edited) and/or deleted from the list.\n\nThe following steps will guide you through these requirements, so we'll start with displaying the Coffees in a nice list.\n"
    },
  
    {
    "title": "# Our 'new look' Home Screen - Displaying the List of Coffees",
    "shortTitle": "02",
    "contentMd" : "# Our 'new look' Home Screen - Displaying the List of Coffees\n\nWhen we're finished this lab, we'll have something like this\n\n![](img/finished.png)\n\nSo, first of all, have a quick look again at the resource layout (content_home.xml). We're using a <b><i>FrameLayout</i></b> as the container for our List of Coffees, which ultimately holds a <b>Fragment</b>, but we'll talk more about that later.\n\nOnce you've had a look at the layout, open your <b>Base.java</b> Activity class and familiarise yourself with the new variables this class now has.\n\nThere's two new instance variables\n\n~~~java\n  protected Bundle            activityInfo; // Used for persistence (of sorts)\n  protected CoffeeFragment    coffeeFragment; // How we'll 'share' our List of Coffees between Activities\n~~~\n\n\nNote : The <b><i>setupCoffees()</i></b> method adds a few Coffee objects to our static <b><i>coffeeList</i></b>, so we can use/call this in our 'onCreate()' just to have a few coffees in our list to start.\n\nNext we'll begin with the task of displaying our Coffees in a custom ListView (inside a Fragment!).\n\nThere are 3 major components (classes) involved in implementing this feature:\n\n- <i>CoffeeItem</i>\n\n- <i>CoffeeListAdapter</i>\n\n- <i>CoffeeFragment</i>\n\nWe'll take each class in turn and insert the necessary code to complete this feature of the App.\n\n\n#CoffeeItem\n\nThe main purpose of this class is to represent a single coffee row in our custom list, so the first thing we need to do is decide how the row should actually look - the associated layout (coffeerow.xml) is already there:\n\n![](img/coffeerowimg.png)\n\nbut familiarise yourself with the widgets (the 'fields' or Views) as you will need to access them in your code.\n\nInside <b>CoffeeItem.java</b> you will need to finish the <b><i>updateControls()</i></b> method to ensure all the coffee data is displayed correctly. This will involve \"binding\" to each of the widgets (Views) on the layout and setting their value.  You can see how the coffee name widget is set below:\n\n~~~java\nprivate void updateControls(Coffee coffee) {\n        ((TextView) view.findViewById(R.id.rowCoffeeName)).setText(coffee.coffeeName);\n\n        // Do the same for shop, rating, price & the favourite image here\n        // and set the favourite on/off depending on the coffees favourite value\n    }\n~~~\n\n#CoffeeListAdapter\n\nThe main purpose of this class is to bind our coffeeList data to a particular view (a ListView in our case) and ultimately display it like so:\n\n![](img/coffeelistapp.png)\n\nIt's worth noting that this class is a <i><u>custom</u></i> adapter class, and it's the only way we get to display or coffee data in the \"custom\" format we want (ie our CoffeeItem rows) - if we were to use a standard Adapter, we would only be able to display our coffees in a very basic fashion.\n\nTo \"customise\" our adapter, we first say that it will manage Coffee Objects (already done) :\n\n~~~Java\npublic class CoffeeListAdapter extends ArrayAdapter<Coffee>\n{\n...\n~~~\n\nand then override a number of methods:\n\n~~~Java\n  @Override\n  public View getView(int position, View convertView, ViewGroup parent)\n  {\n    return null;\n  }\n\n  @Override\n  public int getCount()\n  {\n    return 0;\n  }\n}\n~~~\n\n\nRemember, the <b><i>getView()</i></b> method is automatically called for every object that exists in the underlying data (ie our coffeeList) so you should be returning a <b>CoffeeItem</b> reference here - try and have a go at this without referring to the notes.\n\nThe remaining methods are all related to the coffeeList itself, so again, give it a go without the notes!\n\nYou'll also need to Override <b><i>getItem()</i></b> like so, which we'll make use of in the next lab.\n\n~~~\n@Override\n   public Coffee getItem(int position) {\n       return coffeeList.get(position);\n   }\n~~~\n\n#CoffeeFragment\n\nThe main purpose of this class is to allow us to reuse a component (the Fragment) which contains our list of coffees:\n\n![](img/coffeefragment.png)\n\nThe only thing we need to do at this stage is create an instance of our custom adapter and associate it with our Fragment, so inside the <b><i>onCreate()</i></b> method of the fragment insert the following:\n\n~~~Java\n    listAdapter = new CoffeeListAdapter(activity, this, Base.coffeeList);\n    setListAdapter (listAdapter);\n~~~\n\n---\n\nThe last thing we need to do is attach this Fragment to the Home Screen, so inside our <b><i>onResume()</i></b> method in <b><i>Home.java</i></b> you need to insert the following:\n\n~~~Java\ncoffeeFragment = CoffeeFragment.newInstance(); //get a new Fragment instance\n\tgetFragmentManager().beginTransaction()\n\t\t\t\t\t.add(R.id.fragment_container, coffeeFragment)\n\t\t\t\t\t.commit(); // add it to the current activity\n~~~\n\n\nBuild your project and if you run your app again you should see your list of coffees displayed on the Home Screen.\n\n\nYou should also still be able to \"Add a Coffee\" so make sure to check this functionality. On a related note, you've probably noticed your list 'duplicates' the data, so it's worth removing the <b>setupCoffees()</b> method, now we know our 'Add' works.\n\nHowever, if you select a row in the list, or select the 'delete' button, nothing happens - that's the next step.\n"
    },
  
    {
    "title": "# Our 'new look' Home Screen - Delete a Coffee",
    "shortTitle": "03",
    "contentMd" : "# Our 'new look' Home Screen - Delete a Coffee\n\nHaving a nice custom list isn't really much use unless the user can interact with the list like clicking on a row (or an element within the row). Over the next few steps we'll build in the ability to both edit a coffee's details, and if the user wishes, delete it from the list.\n\n#Deleting a Coffee\n\nTo give the user the option of deleting a coffee (by pressing the 'X' button) we first need to \"listen\" for such an event, so we should attach some kind of Listener to that button. If you have a closer look at our <b>CoffeeItem</b> constructor, you'll see that we already have that setup:\n\n~~~java\n\t\t\tImageView imgDelete = view.findViewById(R.id.rowDeleteImg);\n\t\t\timgDelete.setTag(coffee);\n\t\t\timgDelete.setOnClickListener(deleteListener);\n~~~\n\nBe clear about what is going on here as the <b><i>setTag()</i></b> method is important in the overall scheme of things.\n\nThe rest of the work we need to do is carried out in the <b>CoffeeFragment</b> class so firstly, look again at how we create our <b>CoffeeListAdapter</b> instance, <i>listAdapter</i>:\n\n~~~java\nlistAdapter = new CoffeeListAdapter(activity, this, Base.coffeeList);\n~~~\n\nNotice that the <b>OnClickListener</b> parameter, is a reference to the class itself (<i>this</i>) so the <b>CoffeeFragment</b> class needs to implement this interface as follows:\n\nYour completed <b><i>onClick()</i></b> method should look something like this:\n\n~~~java\n@Override\n  public void onClick(View view)\n  {\n    if (view.getTag() instanceof Coffee)\n    {\n      onCoffeeDelete ((Coffee) view.getTag());\n    }\n  }\n~~~\n\nHere we use the Views 'Tag' to see if it's a coffee, and if it is, that's the one we delete. You can just copy & paste the following code for the <b><i>onCoffeeDelete()</i></b> method:\n\n~~~java\npublic void onCoffeeDelete(final Coffee coffee)\n  {\n    String stringName = coffee.name;\n    AlertDialog.Builder builder = new AlertDialog.Builder(activity);\n    builder.setMessage(\"Are you sure you want to Delete the \\'Coffee\\' \" + stringName + \"?\");\n    builder.setCancelable(false);\n\n    builder.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener()\n    {\n      public void onClick(DialogInterface dialog, int id)\n      {\n        Base.coffeeList.remove(coffee); // remove from our list\n        listAdapter.coffeeList.remove(coffee); // update adapters data\n        listAdapter.notifyDataSetChanged(); // refresh adapter\n      }\n    }).setNegativeButton(\"No\", new DialogInterface.OnClickListener()\n    {\n      public void onClick(DialogInterface dialog, int id)\n      {\n        dialog.cancel();\n      }\n    });\n    AlertDialog alert = builder.create();\n    alert.show();\n  }\n~~~\n\nPay particular attention to the following:\n\n~~~java\npublic void onClick(DialogInterface dialog, int id)\n      {\n        Base.coffeeList.remove(coffee); // remove from our list\n        listAdapter.coffeeList.remove(coffee); // update adapters data\n        listAdapter.notifyDataSetChanged(); // refresh adapter\n      }\n~~~\n\nand understand what is happening here, as this is an important piece of the puzzle.\n\nSo now, when you run the app and select the delete button, you should get something like this:\n\n![](img/deletecoffee.png)\n\nand if you choose 'Yes', then the coffee should be removed from the list.\n\nNow, onto editing a coffee.....\n"
    },
  
    {
    "title": "# Our 'new look' Home Screen - Edit a Coffee",
    "shortTitle": "04",
    "contentMd" : "# Our 'new look' Home Screen - Edit a Coffee\n\nThe user now has the ability to delete (or remove) a coffee from the list of coffees displayed. But what if the user wants to update some of the coffees details? Maybe make it one of his or hers favourite coffees? That's what this step is about, so we'll be taking a similar approach as the previous step, but implementing a slightly different kind of Listener.\n\n#Editing a Coffee\n\nTo give the user the option of Editing a coffee (by pressing the full row) we first need to \"listen\" for such an event, so we need to attach a Listener that 'listens' for individual row click events, and not just an element of the row.\n\nIf you remember from the previous step, our <b>CoffeeFragment</b> was responsible for handling 'delete' events, so naturally, this class will also manage any updates or edits the user wants to make.\n\nOpen your <b>CoffeeFragment.java</b> and override the <b><i>onListItemClick()</i></b> method - this will execute every time a user selects a single row (or listItem) in the list, so this is where you need to\n\n- find out which coffee was selected (and it's 'ID')\n\n- launch another activity so we can update the selected coffee\n\n- make sure the change to our coffee is reflected in our coffeeList\n\nYou can use Android Studio shortcuts to do this like so:\n\nAnywhere inside your <b>CoffeeFragment.java</b> right mouse click and select 'Generate'\n\n![](img/listitemclick1.png)\n\nthen 'Override Methods'\n\n![](img/listitemclick2.png)\n\nnext, choose the relevant method to override\n\n![](img/listitemclick3.png)\n\nand you should get this\n\n![](img/listitemclick4.png)\n\nWe need to use <b>Bundles</b> and <b>Intents</b> and specifically, the first two requirements are somewhat achieved with the following:\n\n~~~java\nBundle activityInfo = new Bundle(); // Creates a new Bundle object\nactivityInfo.putString(\"coffeeId\", /* pass in the coffees id here */);\n\nIntent goEdit = new Intent(getActivity(), Edit.class); // Creates a new Intent\n/* Add the bundle to the intent here */\ngetActivity().startActivity(goEdit); // Launch the Intent\n~~~\n\nHave a go at completing the above as best you can.\n\nOnce you have that done, the rest of the work we need to do is carried out in the <b>Edit</b> Activity class so firstly, have a look at the <b><i>onCreate()</i></b> method - there's some code already in there, so run the app, and select the 'favourite' image to 'toggle it' on/off - does it behave as expected? does it even crash?\n\nIf it does, any ideas why??\n\n\nYou need to setup event handling on <i>editFavourite</i> in the java source to avoid a NullPointerException, so you need to implement the 'toggle method as follows:\n\n~~~java\npublic void toggle (View view) {\n  // Bind to the editFavourite imageview and toggle its image\n  // depending on whether it's a 'favourite' coffee or not\n}\n~~~\n\nand bind to the 'editFavourite' ImageView.\n\nYou then need to retrieve the 'coffeeId' from the Bundle, and get the coffee from our list - once again, try and have a go at all this without referring to the solution code and/or the notes:\n\nNow if you run your app, and select a row, you should launch the 'Edit' Screen correctly.\n\n![](img/editscreen.png)\n\nHowever, there's nothing to edit - so that's the next step - displaying the coffee data so we can change it (like above).\n"
    },
  
    {
    "title": "# Our 'new look' Home Screen - Edit a Coffee",
    "shortTitle": "05",
    "contentMd" : "# Our 'new look' Home Screen - Edit a Coffee\n\nWe can now launch the Edit Screen, but nothing gets displayed, so there's nothing to edit. What we need to do now is\n\n- 'bind' the specific coffee data to the individual views/fields on the Edit Screen\n\n- if any changes are made, ensure these changes are reflected in the global coffeeList\n\n#Displaying the data for Update\n\nFirst of all, open your <i>edit.xml</i> layout and familiarise yourself with the 'names' or id's of all the relevant views you need to access.\n\n\nHere's how we set the title 'field' to the name of the coffee\n\n~~~java\n((TextView)findViewById(R.id.editTitleTV)).setText(aCoffee.coffeeName);\n~~~\n\nRun the app again, and see what you get - now have a go at the rest of the coffee data yourself.\n\nHere's how to set up the 'Favourites' image:\n\n~~~java\neditFavourite = findViewById(R.id.editFavourite);\n\n\t\t if (aCoffee.favourite == true) {\n\t\t\t\t editFavourite.setImageResource(R.drawable.favourites_72_on);\n\t\t\t\t isFavourite = true;\n\t\t } else {\n\t\t\t\t editFavourite.setImageResource(R.drawable.favourites_72);\n\t\t\t\t isFavourite = false;\n\t\t }\n~~~\n\n\nand your <b>toggle()</b> method should look something like this:\n\n~~~java\npublic void toggle(View view) {\n\n\t\t\t if (isFavourite) {\n\t\t\t\t\t aCoffee.favourite = false;\n\t\t\t\t\t Toast.makeText(this,\"Removed From Favourites\",Toast.LENGTH_SHORT).show();\n\t\t\t\t\t isFavourite = false;\n\t\t\t\t\t editFavourite.setImageResource(R.drawable.favourites_72);\n\t\t\t } else {\n\t\t\t\t\t aCoffee.favourite = true;\n\t\t\t\t\t Toast.makeText(this,\"Added to Favourites !!\",Toast.LENGTH_SHORT).show();\n\t\t\t\t\t isFavourite = true;\n\t\t\t\t\t editFavourite.setImageResource(R.drawable.favourites_72_on);\n\t\t\t }\n\t }\n~~~\n\nDon't forget to return 'Home' after updating your coffee data.\n\nIt's worth noting that the coffee is only updated in our list of coffees if we clicked the 'Save' Button, and that we never actually 'put it back' in the list after we updated it, but because our list is <i>static</i>, that's ok - any changes to a single coffee are updated in the global list. We might need to revisit this in later labs, but for now, it's all good.\n\nYou should run you app once more and fully test it for the features now implemented.\n"
    },
  
    {
    "title": "# Deleting Multiple Coffees with a Context Menu & ActionMode",
    "shortTitle": "06",
    "contentMd" : "# Deleting Multiple Coffees with a Context Menu & ActionMode\n\nCurrently, if we wanted to delete more than one coffee at a time we need to delete them individually, which does achieve what we want, but is not a great User Experience if there are dozens of coffees to remove.\n\nThis is where we can utilise a Context Menu and the ActionBar / Action Mode features available to us in Android.\n\n#Setting up your Resources & XML\n\nThis is what we want when the user 'Long Clicks' a row (or rows) in our List.\n\n![](img/multidelete1.png)\n\nNote the different (Context) Menu for deleting.\n\nAnd then subsequently (after deleting)\n\n![](img/multidelete2.png)\n\nTo achieve this we need to\n\n- design the Context Menu\n\n- update the coffeerow design (for when it's selected) and\n\n- update our application 'style' to reflect what and how our Context Menu overlays.\n\n\nFirst, let's design the Menu to look something this:\n\n![](img/delete1.png)\n\nand\n\n![](img/delete2.png)\n\ncreate a new menu resource in the 'menu' folder called <b>delete_list_context.xml</b> and place the following code inside it - just make sure you have the proper string resource set up beforehand ('deleteCoffeesLbl')\n\n~~~XML\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<menu xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <item\n        android:id=\"@+id/menu_item_delete_coffee\"\n        android:icon=\"@android:drawable/ic_menu_delete\"\n        android:title=\"@string/deleteCoffeesLbl\"\n        app:showAsAction=\"ifRoom\" />\n</menu>\n~~~\n\nNext, add a new 'color' Resource\n\n~~~xml\n<color name=\"colorMultiDelete\">#b1c4d9</color>\n~~~\n\nand then, create a new <b>drawable</b> resource xml file in the 'drawable' folder called 'background_activated.xml' and place the following inside\n\n~~~XML\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\" >\n    <item\n        android:state_activated=\"true\"\n        android:drawable=\"@color/colorMultiDelete\"\n        />\n</selector>\n~~~\n\nNow, edit your <b>coffeerow.xml</b> and add the resource you just created as the background color property for the whole layout (at the top), like so\n\n~~~xml\n android:background=\"@drawable/background_activated\"\n~~~\n\nFinally, edit your <b>styles.xml</b> and add the following to your '<b>AppTheme</b>' style. If you like, you can experiment with you own colors?\n\n~~~xml\n<item name=\"windowActionModeOverlay\">true</item>\n<item name=\"actionModeBackground\">@color/colorPrimary</item>\n~~~\n\n#Implementing the MultiChoice Listener interface\n\nThe first thing to do is open up '<b>CoffeeFragment.java</b>' and make sure this class implements the interface we need - <b>AbsListView.MultiChoiceModeListener</b> :\n\n~~~java\npublic class CoffeeFragment  extends ListFragment implements  OnClickListener,\n                                          AbsListView.MultiChoiceModeListener\n{\n\t. . .\n}\n~~~\n\nadd the necessary imports and accept the defaults for all the callbacks, we'll implement what we need to next.\n\nThe MultiChoiceModeListener methods are :\n\n~~~java\n/* ************ MultiChoiceModeListener methods (begin) *********** */\n @Override\n public boolean onCreateActionMode(ActionMode actionMode, Menu menu)\n { . . . }\n\n @Override\n public boolean onPrepareActionMode(ActionMode actionMode, Menu menu)\n { . . . }\n\n @Override\n public boolean onActionItemClicked(ActionMode actionMode, MenuItem menuItem)\n { . . . }\n\n @Override\n public void onDestroyActionMode(ActionMode actionMode)\n {}\n\n @Override\n public void onItemCheckedStateChanged(ActionMode actionMode, int position, long id, boolean checked)\n {}\n /* ************ MultiChoiceModeListener methods (end) *********** */\n~~~\n\nWe only need to implement a few of them, and supply one other local method to actually carry out the deleting of multiple coffees, when selected.\n\nUsing the lecture material as reference, have a go at implementing the necessary methods to achieve the desired functionality. (The solution is on the next step anyway, but have a go first).\n\n#Setting up the List as MultipleChoice\n\nYou've now, hopefully, implemented the necessary callbacks for handling the MultiChoiceMode, but there's one step needs to be carried - the ListView itself needs to be 'aware' that it's items can be selected individually AND as multiple items. This is achieved through setting some of the List properties as the 'View' is created.\n\nTo help you along, here's the method you need to add to 'CoffeeFragment', to achieve the desired results, but be sure what's going on here, before proceeding.\n\n~~~java\n@Override\n  public View onCreateView(LayoutInflater inflater, ViewGroup parent, Bundle savedInstanceState) {\n    View v = super.onCreateView(inflater, parent, savedInstanceState);\n\n    listView = v.findViewById(android.R.id.list);\n    listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);\n    listView.setMultiChoiceModeListener(this);\n\n    return v;\n  }\n~~~\n\nRun the app again and see if you can now delete multiple coffees through the use of a Context Menu and ActionMode/ActionBar.\n"
    },
  
    {
    "title": "# Completed CoffeeFragment",
    "shortTitle": "07",
    "contentMd" : "# Completed CoffeeFragment\n\nHere's the full source code for the updated CoffeeFragment class, and the full solution can be found on the next, final step.\n\n~~~java\npackage ie.cm.fragments;\n\nimport android.app.AlertDialog;\nimport android.app.ListFragment;\nimport android.content.Context;\nimport android.content.DialogInterface;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.ActionMode;\nimport android.view.LayoutInflater;\nimport android.view.Menu;\nimport android.view.MenuInflater;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.AbsListView;\nimport android.widget.ListView;\n\nimport ie.cm.R;\nimport ie.cm.activities.Base;\nimport ie.cm.activities.Edit;\nimport ie.cm.adapters.CoffeeListAdapter;\nimport ie.cm.models.Coffee;\n\npublic class CoffeeFragment  extends ListFragment implements View.OnClickListener,\n        AbsListView.MultiChoiceModeListener\n{\n    public Base activity;\n    public static CoffeeListAdapter listAdapter;\n    public ListView listView;\n\n    public CoffeeFragment() {\n        // Required empty public constructor\n    }\n\n    @Override\n    public void onListItemClick(ListView l, View v, int position, long id) {\n        super.onListItemClick(l, v, position, id);\n\n        Bundle activityInfo = new Bundle(); // Creates a new Bundle object\n        activityInfo.putString(\"coffeeId\", (String) v.getTag());\n        Intent goEdit = new Intent(getActivity(), Edit.class); // Creates a new Intent\n        /* Add the bundle to the intent here */\n        goEdit.putExtras(activityInfo);\n        getActivity().startActivity(goEdit); // Launch the Intent\n    }\n\n    public static CoffeeFragment newInstance() {\n        CoffeeFragment fragment = new CoffeeFragment();\n        return fragment;\n    }\n\n    @Override\n    public void onAttach(Context context)\n    {\n        super.onAttach(context);\n        this.activity = (Base) context;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState)\n    {\n        super.onCreate(savedInstanceState);\n        listAdapter = new CoffeeListAdapter(activity, this, Base.coffeeList);\n        setListAdapter (listAdapter);\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup parent, Bundle savedInstanceState) {\n        View v = super.onCreateView(inflater, parent, savedInstanceState);\n\n        listView = v.findViewById(android.R.id.list);\n        listView.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE_MODAL);\n        listView.setMultiChoiceModeListener(this);\n\n        return v;\n    }\n\n    @Override\n    public void onStart()\n    {\n        super.onStart();\n    }\n\n    @Override\n    public void onClick(View view)\n    {\n        if (view.getTag() instanceof Coffee)\n        {\n            onCoffeeDelete ((Coffee) view.getTag());\n        }\n    }\n\n    public void onCoffeeDelete(final Coffee coffee)\n    {\n        String stringName = coffee.coffeeName;\n        AlertDialog.Builder builder = new AlertDialog.Builder(activity);\n        builder.setMessage(\"Are you sure you want to Delete the \\'Coffee\\' \" + stringName + \"?\");\n        builder.setCancelable(false);\n\n        builder.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener()\n        {\n            public void onClick(DialogInterface dialog, int id)\n            {\n                Base.coffeeList.remove(coffee); // remove from our list\n                listAdapter.coffeeList.remove(coffee); // update adapters data\n                listAdapter.notifyDataSetChanged(); // refresh adapter\n            }\n        }).setNegativeButton(\"No\", new DialogInterface.OnClickListener()\n        {\n            public void onClick(DialogInterface dialog, int id)\n            {\n                dialog.cancel();\n            }\n        });\n        AlertDialog alert = builder.create();\n        alert.show();\n    }\n\n    /* ************ MultiChoiceModeListener methods (begin) *********** */\n    @Override\n    public boolean onCreateActionMode(ActionMode actionMode, Menu menu)\n    {\n        MenuInflater inflater = actionMode.getMenuInflater();\n        inflater.inflate(R.menu.delete_list_context, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onPrepareActionMode(ActionMode actionMode, Menu menu) {\n        return false;\n    }\n\n    @Override\n    public boolean onActionItemClicked(ActionMode actionMode, MenuItem menuItem)\n    {\n        switch (menuItem.getItemId())\n        {\n            case R.id.menu_item_delete_coffee:\n                deleteCoffees(actionMode);\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    private void deleteCoffees(ActionMode actionMode)\n    {\n        for (int i = listAdapter.getCount() - 1; i >= 0; i--)\n        {\n            if (listView.isItemChecked(i))\n            {\n                Base.coffeeList.remove(listAdapter.getItem(i));\n            }\n        }\n        actionMode.finish();\n        listAdapter.notifyDataSetChanged();\n    }\n\n    @Override\n    public void onDestroyActionMode(ActionMode actionMode)\n    {}\n\n    @Override\n    public void onItemCheckedStateChanged(ActionMode actionMode, int position, long id, boolean checked)\n    {}\n    /* ************ MultiChoiceModeListener methods (end) *********** */\n}  \n~~~\n"
    },
  
    {
    "title": "# Exercises",
    "shortTitle": "Exercises",
    "contentMd" : "# Exercises\n\n## Solution\n\nThis is a solution to the lab:\n\n- [CoffeeMate.2.0.Solution](archives/CoffeeMate.2.0.Solution.zip)\n\n## Exercise\n\nIn this lab you have experimented with Custom Adapters & Fragments:\n\n- Experiment with modifying the custom layout of your Coffee Row in our List\n"
    }
  
  ]
  }

